
##开发环境配置
server.port=8080
logging.level.org.springframework.web=DEBUG
#设置mongodb的日志打印
logging.level.org.springframework.data.mongodb.core=DEBUG
spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
spring.datasource.url=jdbc:oracle:thin:@localhost:1521:orcl
spring.datasource.username=scott
spring.datasource.password=a05140212+

#hibernate提供了根据实体类自动维护数据库表结构的功能，可通过spring.jpa.hibernate.ddl-auto来配置
#create:启动时删除上一次生成的表,并根据实体类生成表，表中数据会被清空
#create-drop：启动时根据实体类生成表，sessionFactory关闭时表会被删除
#update：启动会根据实体类生成表，当实体类属性变动的时候，表结构也会更新，在初期开发阶段使用此选项
#validate：启动时验证实体类和数据表是否一致，在数据结构稳定时采用此选项。
#none：不采取任何措施
spring.jpa.hibernate.ddl-auto=update

#设置hibernate操作的时候在控制台显示其真实的sql语句
spring.jpa.show-sql=true

#让控制器(页面)输出的json字符串格式更美观
spring.jackson.serialization.indent-output=true


##REST设置
spring.data.rest.base-path=/rest
#spring.data.rest.default-page-size=int
#spring.data.rest.limit-param-name=String
#spring.data.rest.max-page-size=int
#spring.data.rest.page-param-name=String
#spring.data.rest.return-body-on-create=boolean
#spring.data.rest.return-body-on-update=boolean

#可选 generic,ehcache,hazelcast,infinispan,jcache,redis,guava,simple,none
#spring.cache.type=
#程序启动时创建缓存名称
#spring.cache.cache-names=
#ehcache配置文件地址
#spring.cache.ehcache.config=
#hazelcast配置文件地址
#spring.cache.hazelcast.config=
#infinispan配置文件地址
#spring.cache.infinispan.config=
#jcache配置文件地址
#spring.cache.jcache.config=
#当多个jcache实现在类路径中的时候，指定jcache实现
#spring.cache.jcache.provider=
#guava specs
#spring.cache.guava.spec=
#需要在导入相关依赖，并且开启@EnableCaching缓存支持

#使用redis缓存技术
#Redis数据库索引（默认为0）
#spring.redis.database=0
#Redis服务器地址
#spring.redis.host=127.0.0.1
#Redis服务器连接端口
#spring.redis.port=6379
#Redis服务器连接密码（默认为空）
#spring.redis.password=
#连接池最大连接数(使用负值表示没有限制)
#spring.redis.jedis.pool.max-active=8
#连接处最大阻塞等待时间(使用负值表示没有限制)
#spring.redis.jedis.pool.max-wait=-1
#连接池中最大空闲连接
#spring.redis.jedis.pool.max-idle=8
#连接池中的最小空闲连接
#spring.redis.jedis.pool.min-idle=0

#连接超时时间(毫秒)
#spring.redis.timeout=5000
#数据库主机地址，默认localhost
#spring.data.mongodb.host=localhost
#数据库连接端口，默认27107
spring.data.mongodb.port=27107
spring.data.mongodb.uri=mongodb://localhost/test
#是否开启mongodb存储，默认为true
spring.data.mongodb.repositories.type=auto
#指定鉴权的数据库名
#spring.data.mongodb.authentication-database
#指定mongodb数据库名
#spring.data.mongodb.database
#指定要使用的FieldNamingStrategy.
#spring.data.mongodb.field-naming-strategy
#指定GridFS database的名称.
#spring.data.mongodb.grid-fs-database
#指定Mongo server的密码.
#spring.data.mongodb.password
#指定登陆mongodb的用户名.
#spring.data.mongodb.username
#org.sprigframework.boot.autoconfigure.data.mong

#spring security配置
#内存中的用户默认账户为user
#spring.security.user.name=user
#默认用户的密码
#spring.security.user.password=a05140212+
#默认用户的角色
#spring.security.user.roles=USER


#批处理spring batch是用例处理大量数据操作的一个框架，主要用例读取大量数据，然后进行一定处理后输出成指定的形式
#spring batch主要由以下几部分组成
#JobRepository  用来注册Job的容器
#JobLauncher    用来启动Job的接口
#Job            实际指向的任务，包含一个或多个Step
#Step           Step-步骤包含ItemReader，ItemProccessor和ItemWriter
#ItemReader     用来读取数据的接口
#ItemProccessor 用来处理数据的接口
#ItemWriter     用来输出数据的接口
#在配置类@EnableBatchProccessing开启批处理
#属性
#启动时要执行的job，默认执行全部
#spring.batch.job.names=job1,job2
#是否自动执行定义的Job，默认为是
#spring.batch.job.enabled=true
#是否初始化Spring Batch的数据库，默认是
#spring.batch.initialize-schema=always
#spring.batch.schema=
#设置Spring Batch的数据库表的前缀
#spring.batch.table-prefix=
spring.batch.job.enabled=false

#JMS    Java消息服务,实现  ActiveMQ，HornetQ
#AMQP   兼容JMS,还支持跨语言和平台，主要实现RabbitMQ
#注解 @JmsListener，@RabbitListener注解在方法上监听消息代理发布的消息
#分别通过@EnableJms，@EnableRabbit开启支持
#属性
#消息代理的路径
#Jms配置
#spring.activemq.broker-url=tcp://localhost:61616
#spring.activemq.password=
#spring.activemq.user=
#spring.activemq.in-memory=true
#spring.activemq.pool.enabled=false

#AMQP配置
#rabbitmq服务器地址，默认为localhost
#spring.rabbitmq.host=localhost
#rabbitmq端口，默认5672
#spring.rabbitmq.port=5672
#spring.rabbitmq.username=admin
#spring.rabbitmq.password=secret
#配置ActiveMQ消息代理的地址
#spring.activemq.broker-url=tcp://localhost:61616
#logging.config=classpath:log4j2.yml






